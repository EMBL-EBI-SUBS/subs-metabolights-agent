group 'uk.ac.ebi.subs'
version '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'org.springframework.boot'

mainClassName = "uk.ac.ebi.subs.MetaboLightsAgentApplication"

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.1.RELEASE")
        classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.7'
    }
}


configure(allprojects) {
    apply plugin: 'propdeps'
    apply plugin: 'propdeps-maven'
    apply plugin: 'propdeps-idea'
    apply plugin: 'propdeps-eclipse'
}

repositories {
        mavenLocal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        mavenCentral()
}

dependencies {

    compile("uk.ac.ebi.subs:subs-processing-model:0.1.0-SNAPSHOT")
    compile("uk.ac.ebi.subs:subs-data-model:2.0.1-SNAPSHOT")
    compile("uk.ac.ebi.subs:subs-messaging:0.1.1-SNAPSHOT")
    compile("com.fasterxml.jackson.core:jackson-databind")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    compileOnly('org.projectlombok:lombok:1.16.18')

    optional("org.springframework.boot:spring-boot-configuration-processor")

    compile('uk.ac.ebi.biosamples:models-core:4.0.0-SNAPSHOT') {
        changing = true
        exclude group: 'org.springframework.boot'
    }

    compile ('uk.ac.ebi.biosamples:biosamples-spring-boot-starter:4.0.0-SNAPSHOT') {
        changing = true
        exclude group: 'org.springframework.boot'
    }

    compile group: 'commons-io', name: 'commons-io', version: '2.0.1'

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("uk.ac.ebi.subs:subs-test-categories:0.1.0-SNAPSHOT")
}

task sourceJar(type: Jar) { from sourceSets.main.allJava }

artifacts {
    archives jar
    archives sourceJar {
        classifier "sources" 
        destinationDir = new File("build/libs/sources")
    }
}

task('externalCiTest', type: Test) {
	useJUnit {
		excludeCategories 'uk.ac.ebi.subs.BioSamplesDependentTest'
	}
	testLogging {
		exceptionFormat = 'full'
	}
}

compileJava.dependsOn(processResources)

springBoot {
    executable = true
}

